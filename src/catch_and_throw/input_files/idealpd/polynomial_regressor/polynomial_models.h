#ifndef POLYNOMIAL_MODELS_H
#define POLYNOMIAL_MODELS_H

#include <vector>
#include <array>

namespace PolynomialModels {

constexpr int N_JOINTS = 7;
constexpr int N_INPUTS = 14;  // 7 joint_pos + 7 set_targets

// Joint 0 parameters
namespace Joint0 {
    constexpr int DEGREE = 3;
    constexpr int N_FEATURES = 679;
    constexpr double INTERCEPT = 0.8002991213905944;
    const std::array<double, 14> MEANS = {0.8100504867503934, -0.9314043242994585, -1.9927222721976587, -0.9448085248553504, 2.050836572342959, 1.6501007073376215, -0.8536864815509726, 0.7909770510717882, -0.9242588793152443, -1.9957691188611175, -0.9441837975807722, 2.0474284363579103, 1.6792619719989204, -0.8385590359510725};
    const std::array<double, 14> SCALES = {0.4550387120627881, 0.3013226468093649, 0.23387699031653286, 0.23163532483030472, 0.21347700049071214, 0.23198437940772604, 0.13881447236452402, 0.43495270421037757, 0.305626287670971, 0.23634647150582816, 0.23573625625976416, 0.2209010471054706, 0.21093595998893763, 0.15035839129775005};
    // Powers matrix dimensions: [679][14]
    // See JSON file for full powers matrix
    // First 5 coefficients (see JSON for all 679)
    // [0.40258687533501725, -0.06777041321058083, -0.058067551127856346, -0.04318978896530943, 0.053931310447086205]
}

// Joint 1 parameters
namespace Joint1 {
    constexpr int DEGREE = 3;
    constexpr int N_FEATURES = 679;
    constexpr double INTERCEPT = -0.9279892544464896;
    const std::array<double, 14> MEANS = {0.8100504867503934, -0.9314043242994585, -1.9927222721976587, -0.9448085248553504, 2.050836572342959, 1.6501007073376215, -0.8536864815509726, 0.7909770510717882, -0.9242588793152443, -1.9957691188611175, -0.9441837975807722, 2.0474284363579103, 1.6792619719989204, -0.8385590359510725};
    const std::array<double, 14> SCALES = {0.4550387120627881, 0.3013226468093649, 0.23387699031653286, 0.23163532483030472, 0.21347700049071214, 0.23198437940772604, 0.13881447236452402, 0.43495270421037757, 0.305626287670971, 0.23634647150582816, 0.23573625625976416, 0.2209010471054706, 0.21093595998893763, 0.15035839129775005};
    // Powers matrix dimensions: [679][14]
    // See JSON file for full powers matrix
    // First 5 coefficients (see JSON for all 679)
    // [-0.032246241197460015, 0.2826379801243727, 0.038715908060595355, 0.014396291101348206, -0.029864624550924108]
}

// Joint 2 parameters
namespace Joint2 {
    constexpr int DEGREE = 3;
    constexpr int N_FEATURES = 679;
    constexpr double INTERCEPT = -1.9916816783103033;
    const std::array<double, 14> MEANS = {0.8100504867503934, -0.9314043242994585, -1.9927222721976587, -0.9448085248553504, 2.050836572342959, 1.6501007073376215, -0.8536864815509726, 0.7909770510717882, -0.9242588793152443, -1.9957691188611175, -0.9441837975807722, 2.0474284363579103, 1.6792619719989204, -0.8385590359510725};
    const std::array<double, 14> SCALES = {0.4550387120627881, 0.3013226468093649, 0.23387699031653286, 0.23163532483030472, 0.21347700049071214, 0.23198437940772604, 0.13881447236452402, 0.43495270421037757, 0.305626287670971, 0.23634647150582816, 0.23573625625976416, 0.2209010471054706, 0.21093595998893763, 0.15035839129775005};
    // Powers matrix dimensions: [679][14]
    // See JSON file for full powers matrix
    // First 5 coefficients (see JSON for all 679)
    // [0.010817043374010491, -0.004630722168282217, 0.16747325781862826, -0.020713972602204478, 0.01452889072143805]
}

// Joint 3 parameters
namespace Joint3 {
    constexpr int DEGREE = 2;
    constexpr int N_FEATURES = 119;
    constexpr double INTERCEPT = -0.9407117107311254;
    const std::array<double, 14> MEANS = {0.8100504867503934, -0.9314043242994585, -1.9927222721976587, -0.9448085248553504, 2.050836572342959, 1.6501007073376215, -0.8536864815509726, 0.7909770510717882, -0.9242588793152443, -1.9957691188611175, -0.9441837975807722, 2.0474284363579103, 1.6792619719989204, -0.8385590359510725};
    const std::array<double, 14> SCALES = {0.4550387120627881, 0.3013226468093649, 0.23387699031653286, 0.23163532483030472, 0.21347700049071214, 0.23198437940772604, 0.13881447236452402, 0.43495270421037757, 0.305626287670971, 0.23634647150582816, 0.23573625625976416, 0.2209010471054706, 0.21093595998893763, 0.15035839129775005};
    // Powers matrix dimensions: [119][14]
    // See JSON file for full powers matrix
    // First 5 coefficients (see JSON for all 119)
    // [0.013875945022225987, -0.009271491222019307, 0.001915516873112186, 0.18302750051552077, 0.0017608854984651019]
}

// Joint 4 parameters
namespace Joint4 {
    constexpr int DEGREE = 3;
    constexpr int N_FEATURES = 679;
    constexpr double INTERCEPT = 2.049642681692801;
    const std::array<double, 14> MEANS = {0.8100504867503934, -0.9314043242994585, -1.9927222721976587, -0.9448085248553504, 2.050836572342959, 1.6501007073376215, -0.8536864815509726, 0.7909770510717882, -0.9242588793152443, -1.9957691188611175, -0.9441837975807722, 2.0474284363579103, 1.6792619719989204, -0.8385590359510725};
    const std::array<double, 14> SCALES = {0.4550387120627881, 0.3013226468093649, 0.23387699031653286, 0.23163532483030472, 0.21347700049071214, 0.23198437940772604, 0.13881447236452402, 0.43495270421037757, 0.305626287670971, 0.23634647150582816, 0.23573625625976416, 0.2209010471054706, 0.21093595998893763, 0.15035839129775005};
    // Powers matrix dimensions: [679][14]
    // See JSON file for full powers matrix
    // First 5 coefficients (see JSON for all 679)
    // [-0.005355553706050884, -0.019084140150702422, -0.003498819894534754, 0.011542259776304128, 0.19339160836422836]
}

// Joint 5 parameters
namespace Joint5 {
    constexpr int DEGREE = 3;
    constexpr int N_FEATURES = 679;
    constexpr double INTERCEPT = 1.6573543564716129;
    const std::array<double, 14> MEANS = {0.8100504867503934, -0.9314043242994585, -1.9927222721976587, -0.9448085248553504, 2.050836572342959, 1.6501007073376215, -0.8536864815509726, 0.7909770510717882, -0.9242588793152443, -1.9957691188611175, -0.9441837975807722, 2.0474284363579103, 1.6792619719989204, -0.8385590359510725};
    const std::array<double, 14> SCALES = {0.4550387120627881, 0.3013226468093649, 0.23387699031653286, 0.23163532483030472, 0.21347700049071214, 0.23198437940772604, 0.13881447236452402, 0.43495270421037757, 0.305626287670971, 0.23634647150582816, 0.23573625625976416, 0.2209010471054706, 0.21093595998893763, 0.15035839129775005};
    // Powers matrix dimensions: [679][14]
    // See JSON file for full powers matrix
    // First 5 coefficients (see JSON for all 679)
    // [-0.009314694494324201, 0.06486225819265116, 0.04423374119218859, 0.014574009664585887, -0.0380981021404923]
}

// Joint 6 parameters
namespace Joint6 {
    constexpr int DEGREE = 3;
    constexpr int N_FEATURES = 679;
    constexpr double INTERCEPT = -0.8505062757855002;
    const std::array<double, 14> MEANS = {0.8100504867503934, -0.9314043242994585, -1.9927222721976587, -0.9448085248553504, 2.050836572342959, 1.6501007073376215, -0.8536864815509726, 0.7909770510717882, -0.9242588793152443, -1.9957691188611175, -0.9441837975807722, 2.0474284363579103, 1.6792619719989204, -0.8385590359510725};
    const std::array<double, 14> SCALES = {0.4550387120627881, 0.3013226468093649, 0.23387699031653286, 0.23163532483030472, 0.21347700049071214, 0.23198437940772604, 0.13881447236452402, 0.43495270421037757, 0.305626287670971, 0.23634647150582816, 0.23573625625976416, 0.2209010471054706, 0.21093595998893763, 0.15035839129775005};
    // Powers matrix dimensions: [679][14]
    // See JSON file for full powers matrix
    // First 5 coefficients (see JSON for all 679)
    // [-0.023705834061983084, 0.03870897830265405, 0.03183222586101535, -0.0033029235260768155, -0.0343938967029029]
}

} // namespace PolynomialModels

#endif // POLYNOMIAL_MODELS_H
